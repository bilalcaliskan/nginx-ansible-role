---

- name: Include version specific variables for CentOS/RHEL
  include_vars: "{{ ansible_os_family | lower }}_{{ ansible_distribution_major_version }}.yml"

- name: Get service facts
  service_facts:

- name: Set fact before installation
  set_fact:
    nginx_installed: false
  when: ansible_facts.services["nginx.service"] is not defined

- name: Transfer nginx repo template to the remote location
  template:
    src: nginx.repo.j2
    dest: /etc/yum.repos.d/nginx.repo
    owner: root
    group: root
    mode: 0644

- name: Ensure required packages are installed
  yum:
    name: "{{ required_packages }}"
    state: present

- name: Install Nginx for CentOS/RHEL 7 block
  block:
    - name: Install the specified version of Nginx from nginx repo
      yum:
        name: "nginx-{{ version }}"
        enablerepo: nginx
        state: present
      when: version != "latest"

    - name: Install the latest version of Nginx from nginx repo
      yum:
        name: nginx
        enablerepo: nginx
        state: present
      when: version == "latest"
  when: ansible_distribution_major_version | int == 7

- name: Install Nginx for CentOS/RHEL 8 block
  block:
    - name: Install the specified version of Nginx from nginx repo for CentOS/RHEL 8
      yum:
        name: "nginx-{{ version }}"
        enablerepo: nginx
        disablerepo: AppStream
        state: present
      when: version != "latest"

    - name: Install the latest version of Nginx from nginx repo for CentOS/RHEL 8
      yum:
        name: nginx
        enablerepo: nginx
        disablerepo: AppStream
        state: present
      when: version == "latest"
  when: ansible_distribution_major_version | int == 8

- name: Ensure firewalld is started and enabled
  service:
    name: firewalld
    state: started
    enabled: true
  changed_when: false

- name: Ensure required kernel parameters set correctly
  sysctl:
    sysctl_file: /etc/sysctl.d/99-nginx.conf
    reload: true
    name: "{{ item.key }}"
    value: "{{ item.value }}"
  loop: "{{ required_kernel_params }}"

- name: Block for ramfs
  block:
    - name: Check if ramfs directory exists
      stat:
        path: "{{ ramfs_dir }}"
      register: ramfs_dir_stat_result

    - name: Create ramfs directory
      file:
        path: "{{ ramfs_dir }}"
        state: directory
        owner: nginx
        group: nginx
      when: not ramfs_dir_stat_result.stat.exists

    - name: Change selinux context using file module
      file:
        path: "{{ ramfs_dir }}"
        setype: httpd_var_lib_t
        seuser: system_u
        serole: object_r
        selevel: s0

    - name: Ensure ramfs is mounted with specific Selinux context
      mount:
        name: "{{ ramfs_dir }}"
        src: tmpfs
        fstype: tmpfs
        opts: "defaults,size={{ ramfs_size }},uid=nginx,gid=nginx,context=system_u:object_r:httpd_var_lib_t:s0"
        state: mounted
  when: (enable_caching | bool) and (enable_ramfs | bool)

- name: Ensure required ports are reachable over firewalld
  firewalld:
    port: "{{ item }}"
    permanent: true
    immediate: true
    state: enabled
  loop: "{{ required_ports }}"

- name: Transfer template files to the remote location
  template:
    src: "{{ item.src_path }}"
    dest: "{{ item.dest_path }}"
    owner: "{{ item.user }}"
    group: "{{ item.group }}"
    mode: "{{ item.mode }}"
  loop:
    - {src_path: nginx.conf.j2, dest_path: /etc/nginx/nginx.conf, user: root, group: root, mode: '0644'}
    - {src_path: nginx.service.j2, dest_path: /usr/lib/systemd/system/nginx.service, user: root, group: root, mode: '0644'}

- name: Include vservers.yml conditionally
  include_tasks: vservers.yml
  when: (vservers | length > 0)

- name: Ensure NGINX is started and enabled
  systemd:
    name: nginx
    state: started
    enabled: true
    daemon_reload: true

...
